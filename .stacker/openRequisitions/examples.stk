name: examples
requisitions:
    -
        name: 'amqp self-test'
        requisitions:
            -
                name: 'creating exchange'
                publishers:
                    -
                        type: amqp
                        payload: notPassive
                        options:
                            host: localhost
                            port: 5672
                        exchange: enqueuer.exchange
                        exchangeOptions:
                            passive: false
                        routingKey: creating.exchange.example
                        id: id1544238244379zXTAVQY3ts
                        name: 'Publisher #0'
                        errors: []
                        component: publisher
                id: id1544238244379CI1M6poAeV
                subscriptions: []
                requisitions: []
                errors: []
                invalidChildren: []
                component: requisition
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
            -
                name: 'using just created exchange'
                publishers:
                    -
                        type: amqp
                        payload: "{\n    \"how\": {\n        \"about\": \"a new object?\"\n    }\n}"
                        options:
                            host: localhost
                            port: 5672
                        exchange: enqueuer.exchange
                        exchangeOptions:
                            passive: true
                        routingKey: enqueuer.integration.test.routing.key
                        messageOptions:
                            headers:
                                key: value
                                otherKey: otherValue
                        onInit:
                            assertions:
                                -
                                    name: 'Checking port'
                                    expect: publisher.options.port
                                    toBeEqualTo: 5672
                        id: id15442382443794VWsQ4mD20
                        name: 'Publisher #0'
                        errors: []
                        component: publisher
                        format: json
                        onFinish:
                            assertions: []
                subscriptions:
                    -
                        type: amqp
                        timeout: 3000
                        options:
                            host: localhost
                            port: 5672
                        exchange: enqueuer.exchange
                        routingKey: 'enqueuer.integration.test.routing.#'
                        onMessageReceived:
                            assertions:
                                -
                                    name: Payload
                                    expect: payload.how.about
                                    toBeEqualTo: '`a new object?`'
                                -
                                    name: Header
                                    expect: headers.key
                                    toBeEqualTo: '`value`'
                                -
                                    name: 'Other Header Value'
                                    expect: headers.otherKey
                                    toBeEqualTo: '`otherValue`'
                                -
                                    name: 'Routing Key'
                                    expect: deliveryInfo.routingKey
                                    toBeEqualTo: '`enqueuer.integration.test.routing.key`'
                        id: id1544238244379CvD980Vg7E
                        name: 'Subscription #0'
                        errors: []
                        component: subscription
                        onInit:
                            assertions: []
                        onFinish:
                            assertions: []
                id: id1544238244379Ib12Q0HXtg
                requisitions: []
                errors: []
                invalidChildren: []
                component: requisition
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
            -
                name: 'default exhange'
                publishers:
                    -
                        type: amqp
                        payload: 'default exchange'
                        options:
                            host: localhost
                            port: 5672
                        routingKey: enqueuer.default.exchange
                        id: id1544238244379DZA366PPnN
                        name: 'Publisher #0'
                        errors: []
                        component: publisher
                        exchangeOptions: {}
                        messageOptions:
                            headers: {}
                        onInit:
                            assertions: []
                        onFinish:
                            assertions: []
                subscriptions:
                    -
                        type: amqp
                        timeout: 3000
                        options:
                            host: localhost
                            port: 5672
                        queueName: enqueuer.default.exchange
                        onMessageReceived:
                            script: 'data = Buffer.from(message.payload.data).toString();'
                            assertions:
                                -
                                    name: 'Check Payload'
                                    expect: data
                                    toBeEqualTo: '`default exchange`'
                            store: {}
                        id: id15442382443798z3hJ0Perw
                        name: 'Subscription #0'
                        errors: []
                        component: subscription
                        onInit:
                            assertions: []
                        onFinish:
                            assertions: []
                id: id1544238244379C587Q7D3ez
                requisitions: []
                errors: []
                invalidChildren: []
                component: requisition
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
        id: id1544238244378aTfo0X4zET
        publishers: []
        subscriptions: []
        errors: []
        invalidChildren: []
        component: requisition
        onInit:
            assertions: []
        onFinish:
            assertions: []
    -
        id: id1543000638523m9VUBwwaZQ
        name: 'github api'
        publishers:
            -
                id: id15430006520613DQyTRy3yb
                name: 'Stacker contributors'
                type: http
                component: publisher
                timeout: ""
                url: 'https://api.github.com/repos/lopidio/stacker/contributors'
                method: GET
                headers:
                    User-Agent: stacker
                payload: null
                format: raw
                onMessageReceived:
                    script: "body = JSON.parse(body)\nrech = body.some(contributor => contributor.login === 'rodrigohrech');"
                    assertions:
                        -
                            name: 'Status Code'
                            expect: statusCode
                            toBeEqualTo: '200'
                        -
                            name: Lop√≠dio
                            expect: 'body[0].login'
                            toBeEqualTo: '`lopidio`'
                        -
                            name: Corsino
                            expect: 'body[1].login'
                            toBeEqualTo: '''guilhermecorsino'''
                        -
                            name: 'Green Keeper'
                            expect: 'body[2].login'
                            toBeEqualTo: '`greenkeeper[bot]`'
                        -
                            name: Size
                            expect: body.length
                            toBeGreaterThanOrEqualTo: '5'
                        -
                            name: Henrique
                            expect: 'body[3].login'
                            toBeEqualTo: '''hscorrea'''
                        -
                            name: Rech
                            expectToBeTruthy: rech
                    store: {}
                errors: []
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
                sync: true
        subscriptions: []
        requisitions: []
        component: requisition
        errors: []
        invalidChildren: []
        onInit:
            assertions: []
        onFinish:
            assertions: []
    -
        timeout: 3000
        name: 'http self-test'
        delay: '123'
        iterations: 2
        publishers:
            -
                timeout: 123
                type: http
                url: 'http://localhost:23068/basic'
                method: POST
                payload: 'basic auth'
                headers:
                    content-type: application/json
                onMessageReceived:
                    assertions:
                        -
                            expect: body
                            toBeEqualTo: '`basic auth response`'
                id: id1543155534120rnZ74OpxsQ
                name: 'Endpoint hit'
                component: publisher
                errors: []
        subscriptions:
            -
                type: http
                endpoint: /basic
                port: 23068
                method: POST
                timeout: 10000
                response:
                    headers:
                        key: 123
                    status: 200
                    payload: 'basic auth response'
                onMessageReceived:
                    assertions:
                        -
                            name: Payload
                            expect: message.body
                            toBeEqualTo: '`basic auth`'
                id: id1543155534120uHEjlry1iu
                name: 'Server mock'
                component: subscription
                errors: []
        id: id1543155534120h5PCfz8OeX
        requisitions: []
        component: requisition
        errors: []
        invalidChildren: []
        onInit:
            assertions: []
        onFinish:
            assertions: []
    -
        publishers:
            -
                type: mqtt
                name: 'local broker'
                brokerAddress: 'mqtt://localhost'
                payload: enqueuer
                topic: enqueuer/integration/public/test
                options:
                    clientId: enqueuerPublishOptionsExampleIdDifferent2313
                id: id1544064384103I5H4kqbLbA
                errors: []
                component: publisher
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
        subscriptions:
            -
                name: 'local broker'
                type: mqtt
                brokerAddress: 'mqtt://localhost'
                topic: '#'
                timeout: '1500'
                onMessageReceived:
                    script: 'payload = Buffer.from(message.payload);'
                    assertions:
                        -
                            name: Payload
                            expect: payload
                            toBeEqualTo: '`enqueuer`'
                        -
                            name: Topic
                            expect: topic
                            toBeEqualTo: '`enqueuer/integration/public/test`'
                        -
                            name: 'Beatles song'
                            expect: payload.length
                            toBeGreaterThan: 5
                id: id1544064384103FHWcuvJVdW
                errors: []
                component: subscription
                options: {}
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
        name: 'mqtt self-test'
        id: id1544064384103qeDqkLtapt
        requisitions: []
        errors: []
        invalidChildren: []
        component: requisition
        onInit:
            assertions: []
        onFinish:
            assertions: []
    -
        name: recursion
        onInit:
            assertions: []
            store:
                counter: 0
        requisitions:
            -
                name: second.0
                iterations: 3
                requisitions:
                    -
                        name: second.1
                        iterations: 3
                        requisitions:
                            -
                                name: second.2
                                iterations: 3
                                requisitions: []
                                id: id1544238244388f7xsbTpzX7
                                publishers: []
                                subscriptions: []
                                errors: []
                                invalidChildren: []
                                component: requisition
                                onInit:
                                    script: store.counter++
                                    assertions: []
                                    store: {}
                                onFinish:
                                    assertions: []
                        id: id15442382443880R1s7epOgM
                        publishers: []
                        subscriptions: []
                        errors: []
                        invalidChildren: []
                        component: requisition
                        onInit:
                            assertions: []
                        onFinish:
                            assertions: []
                id: id1544238244388xgo44eulxq
                publishers: []
                subscriptions: []
                errors: []
                invalidChildren: []
                component: requisition
                onInit:
                    assertions: []
                onFinish:
                    assertions: []
        onFinish:
            assertions:
                -
                    name: '3 exponential to 3'
                    expect: store.counter
                    toBeEqualTo: '3*3*3'
        id: id1544238244388gb8kbDeBv8
        publishers: []
        subscriptions: []
        errors: []
        invalidChildren: []
        component: requisition
id: id1544238244389kGoTyq3kVF
publishers: []
subscriptions: []
errors: []
invalidChildren: []
component: requisition
onInit:
    assertions: []
onFinish:
    assertions: []
